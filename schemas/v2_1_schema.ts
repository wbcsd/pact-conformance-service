export interface paths {
    "/2/footprints": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Action ListFootprints
         * @description Retrieve a list of Product Carbon Footprints (PCFs) that are available.  The list can be filtered by various criteria.
         *
         */
        get: operations["listFootprints"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2/footprints/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Action GetFootprint
         * @description ^ Retrieve a single Product Carbon Footprint (PCF) by its unique identifier.
         */
        get: operations["getFootprintById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Action Event
         * @description Post an event to the system. The event will be processed by the system  and may trigger further actions.
         *
         */
        post: operations["post_event"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * ProductFootprint
         * @description The ProductFootprint is a data type which represents the footprint of a product under a specific scope (ยง 5.2.1 Scope of a Footprint)  and with values calculated in accordance with the PACT Framework.
         *     Conceptually, the data type ProductFootprint is modeled as a multi-purpose  container for product-specific emissions factors which is supported by  extensibility through Data Model Extensions.
         *     Each ProductFootprint can and should be updated over time, for instance  to incorporate new or refined data from data owners (see ยง 6 Product  Footprint Lifecycle).
         *
         */
        ProductFootprint: {
            /**
             * Format: uuid
             * @description A unique identifier that a system uses to refer to the entire dataset of the PCF.  This is typically an automatically-generated number by the technology solution to maintain  the required technical references to data within the system. UUID v4 [RFC4122](https://tools.ietf.org/html/rfc4122).
             *
             * @example f4b1225a-bd44-4c8e-861d-079e4e1dfd69
             */
            id: string;
            /**
             * @description The version of the PACT Tech Specs that the data being shared complies with.  This is a string in the format of "major.minor.patch" (e.g. "2.1.0").
             *
             * @example 2.1.0
             */
            specVersion: string;
            /**
             * @description A given PCF may change over time, due to updates to the calculation.  This field lists all id's that reflect "past versions" of the current PCF.  This is typically an automatically generated field of unique identifiers,  maintained by the technology solution.
             *
             * @example [
             *       "f4b1225a-bd44-4c8e-861d-079e4e1dfd69",
             *       "079e425a-464f-528d-341d-4a944a1dfd70"
             *     ]
             */
            precedingPfIds?: string[];
            /**
             * Format: int32
             * @description The version number of the PCF; for example starting with 1 and incrementing. If changes are made to the PCF, this version number will increment.
             *
             * @example 1
             * @example 3303
             */
            version: number;
            /**
             * Format: date-time
             * @description The date and time when the PCF was created. This is typically an automatically  generated field by the technology solution.
             *
             */
            created: string;
            /** Format: date-time */
            updated?: string | null;
            /**
             * @description The status of the PCF. Active means that the PCF is the most recent version  and is the one that should be used. Deprecated means that the PCF is no longer  the most recent version and should not be used.  This attribute typically will be automatically generated by the technology  system and will not need to be entered by the user.
             *
             * @enum {string}
             */
            status: "Active" | "Deprecated";
            /** @description A descriptive reasoning explaining the current status of the PCF, what was  changed since the last version, etc.
             *      */
            statusComment?: string | null;
            /**
             * Format: date-time
             * @description The start date and time of the validity period. The period of time between the  validityPeriodStart and validityPeriodEnd is defined as the "validity period",  and represents the time period during which the PCF is valid. Specifying the  validity period is optional. If this is not specified, then it is assumed the  PCF is valid for 3 years, beginning with the referencePeriodEnd.
             *
             */
            validityPeriodStart?: string | null;
            /**
             * Format: date-time
             * @description The end date and time of the validity period. See validityPeriodStart for more details.
             *
             */
            validityPeriodEnd?: string | null;
            /** @description The (legal) name of the company supplying the product and reporting the PCF (aka the data owner)
             *      */
            companyName: components["schemas"]["NonEmptyString"];
            /** @description A list of company identifiers which represent the companies that are considered  data owners of the provided PCF. In a large organization, this may include multiple subsidiaries or legal entities of a given corporation, hence the need to provide  multiple identifiers. A list of only one identifier is also valid. The format  of each companyID must be provided as a URN (Uniform Resource Name), which  helps ensure the data provided is standardized and can be interpreted by the  receiving system.
             *      */
            companyIds: components["schemas"]["Urn"][];
            /** @description A description of the product, including any additional relevant information  such as production technology, packaging, feedstock and technical parameters.
             *      */
            productDescription: string;
            /** @description All relevant product identifiers to identify the product for which the provided  PCF was calculated (e.g. supplier part number, GTIN, article number, CPC  classification, CAS Number, BOM Version, batch number, etc.)
             *      */
            productIds: components["schemas"]["Urn"][];
            /** @description The UN Central Product Classification Code (CPC) for the given product. The relevant  CPC code may be identified here https://unstats.un.org/unsd/classifications/Econ/cpc
             *      */
            productCategoryCpc: components["schemas"]["NonEmptyString"];
            /** @description The trade name of the product in order for it to be recognizable by the receiver of the PCF information
             *      */
            productNameCompany: components["schemas"]["NonEmptyString"];
            /** @description Any additional information related to the PCF. Whereas the property productDescription  contains product-level information, comment should be used for information and instructions  related to the calculation of the PCF, or other information which informs the ability to interpret (e.g. LUC not included as unable to calculate LUC), to audit or to verify the PCF
             *      */
            comment: string;
            pcf: components["schemas"]["CarbonFootprint"];
        };
        NonEmptyString: string;
        Urn: string;
        /**
         * CarbonFootprint
         * @description ^ The CarbonFootprint represents the carbon footprint of a product and related data in accordance with the PACT Framework.
         */
        CarbonFootprint: {
            /**
             * @description The unit with which the PCF was calculated
             *
             * @enum {string}
             */
            declaredUnit: "liter" | "kilogram" | "cubic meter" | "kilowatt hour" | "megajoule" | "ton kilometer" | "square meter";
            /** @description The amount of Declared Units contained within the product to which the PCF refers to.  This is not representing the total annual quantity supplied (e.g. if the product is  supplied in bulk in kg, which is the declared unit selected, please enter 1)
             *      */
            unitaryProductAmount: components["schemas"]["PositiveNonZeroDecimal"];
            /** @description The PCF of the product excluding biogenic CO2 emissions.
             *      */
            pCfExcludingBiogenic: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description The PCF of the product including ALL biogenic emissions (CO2 and otherwise).
             *      */
            pCfIncludingBiogenic?: components["schemas"]["Decimal"];
            /** @description The emissions from fossil sources as a result of fuel combustion, from fugitive  emissions, and from process emissions.
             *      */
            fossilGhgEmissions: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description The fossil carbon content of the product (mass of carbon).
             *      */
            fossilCarbonContent: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description The biogenic carbon content of the product (mass of carbon).
             *      */
            biogenicCarbonContent: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description The emissions from land use change (LUC) activities.Emissions resulting from  recent (i.e., previous 20 years) carbon stock loss due to land conversion directly  on the area of land under consideration. The value of this property MUST include  direct land use change (dLUC) where available, otherwise statistical land use  change (sLUC) can be used.
             *      */
            dLucGhgEmissions?: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description GHG emissions and removals associated with land-management-related changes,  including non-CO2 sources. Note: version 1 did not explictly include non-CO2 sources. This is now included in the definition.
             *      */
            landManagementGhgEmissions?: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description All other biogenic GHG emissions associated with product manufacturing and transport  that are not included in dLUC (dLucGhgEmissions), iLUC (iLucGhgEmissions), and land  management (landManagementGhgEmissions).  Note: version 1.0.0 incorrectly defined this is "all other GHG emissions"; i.e. missing the "biogenic" qualifier.
             *      */
            otherBiogenicGhgEmissions?: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description Emissions resulting from recent (i.e., previous 20 years) carbon stock loss due to  land conversion on land not owned or controlled by the company or in its supply  chain, induced by change in demand for products produced or sourced by the company.
             *      */
            iLucGhgEmissions?: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description The Biogenic Carbon contained in the product converted to kilogram of CO2e.
             *      */
            biogenicCarbonWithdrawal?: components["schemas"]["NegativeOrZeroDecimal"];
            /** @description The GHG emissions resulting from aircraft engine usage for the transport of the product, excluding radiative forcing.
             *      */
            aircraftGhgEmissions?: components["schemas"]["PositiveOrZeroDecimal"];
            /**
             * @description The IPCC (Intergovernmental Panel of Climate Change) frequently releases (GWP)  global warming potential values for climate gases related to CO2. These GWP  values are released in Assessment Reports (AR), which are numbered. The AR  umber can be used to track the age and accuracy of the GWP values used in  reporting. This field indicates the IPCC version of the GWP characterization  factors used in the calculation of the PCF. Advisement: The set of characterization factor identifiers will likely change in future revisions. It is recommended to account for this when implementing the validation of this property.
             *
             * @enum {string}
             */
            characterizationFactors: "AR6" | "AR5";
            crossSectoralStandardsUsed: ("GHG Protocol Product standard" | "ISO Standard 14067" | "ISO Standard 14044")[];
            /** @description The product-specific or sector-specific rules applied for calculating or  allocating GHG emissions. Sector specific guidance frameworks, such as  Product Category Rules (PCR), are sets of rules for how to calculate and  document Life Cycle Assessments. They provide product category specific guidance and enhance comparability between assessments of the different  suppliers for the same category (sector). The same applies to Product  Environmental Footprint Category Rules (PEFCR)).  If no rules were used,  leave this field empty.
             *      */
            productOrSectorSpecificRules?: components["schemas"]["ProductOrSectorSpecificRule"][];
            /**
             * @description Name of the standard followed to account for biogenic emissions and removals.
             *
             * @enum {string}
             */
            biogenicAccountingMethodology?: "PEF" | "ISO" | "GHGP" | "Quantis";
            /** @description Brief description of the processes attributable to each life cycle stage included  in the PCF (e.g. electricity consumption for manufacturing), especially those  that significantly contribute manufacturing steps of the product (including  general description of used technologies).
             *      */
            boundaryProcessesDescription: string;
            /**
             * Format: date-time
             * @description The start date and time of the earliest activity data used to calculate the  PCF. This start date can be considered the start of the period over which  the given PCF is referencing, or reporting on.
             *
             */
            referencePeriodStart: string;
            /**
             * Format: date-time
             * @description The end date and time of the latest activity data used to calculate the PCF.  This end date can be considered the end of the period over which the given  PCF is referencing, or reporting on.
             *
             */
            referencePeriodEnd: string;
            /**
             * @description The geographic representation of the PCF may be reported at different  levels of granularity, depending on the prefere of the data provider  (e.g., at a plant, region, or country level). This attribute specifies  the geographic region to which the PCF refers, i.e. "Africa",  "Central Asia", etc.
             *
             * @enum {string}
             */
            geographyRegionOrSubregion?: "Africa" | "Americas" | "Asia" | "Europe" | "Oceania" | "Australia and New Zealand" | "Central Asia" | "Eastern Asia" | "Eastern Europe" | "Latin America and the Caribbean" | "Melanesia" | "Micronesia" | "Northern Africa" | "Northern America" | "Northern Europe" | "Polynesia" | "South-eastern Asia" | "Southern Asia" | "Southern Europe" | "Sub-Saharan Africa" | "Western Asia" | "Western Europe";
            /**
             * @description The geographic representation of the PCF may be reported at different levels of granularity, depending on the prefere of the data provider (e.g., at a  plant, region, or country level). This field indicates the country to which  the PCF refers. The country name must be according to ISO 3166-2 alpha-2  country code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
             *
             * @example US
             * @example DE
             */
            geographyCountry?: string;
            /**
             * @description The geographic representation of the PCF may be reported at different  levels of granularity, depending on the prefere of the data provider  (e.g., at a plant, region, or country level). This attribute represents  the most granular (i.e. "most specific") geography, i.e. the specific  subdivision within a given country, for example New York State within  the USA. Follows ISO 3166-2.
             *
             * @example US-CA
             * @example DE-BW
             */
            geographyCountrySubdivision?: string;
            /** @description The list of secondary data sources and versions which have been used by  you or by suppliers (e.g. data bases such as ecoinvent) for the PCF  calculation
             *      */
            secondaryEmissionFactorSources?: components["schemas"]["EmissionFactorDS"][];
            /** @description Percentage of emissions EXCLUDED from the cradle to gate PCF in total.  The percentage MUST be expressed as a decimal number, and SHOULD comply  with the Framework (a maximum of 5% of the cradle to gate PCF emissions  may be excluded) as well as any relevant sector specific guidelines  referring to exemption rules/cut-off criteria.
             *      */
            exemptedEmissionsPercent: components["schemas"]["Percent"];
            /** @description If emissions exempted, rationale behind exclusion of specific PCF emissions.
             *      */
            exemptedEmissionsDescription: string;
            /** @description True or False to indicate whether packaging emissions are including in the PCF.
             *      */
            packagingEmissionsIncluded: boolean;
            /** @description Emissions resulting from the packaging of the product. The value MUST NOT  be defined if packagingEmissionsIncluded is False.
             *      */
            packagingGhgEmissions?: components["schemas"]["PositiveOrZeroDecimal"];
            /** @description Description of the allocation rules applied to the PCF's foreground data  including an explanation of the underlying reasons (way of allocating  all activities from your manufacturing steps to the declared unit).
             *      */
            allocationRulesDescription?: string | null;
            /** @description Results, key drivers, and a short qualitative description of the  uncertainty assessment, if applicable.
             *      */
            uncertaintyAssessmentDescription?: string | null;
            /** @description Share of primary data in the final PCF, calculated according to  the Framework.
             *      */
            primaryDataShare?: components["schemas"]["Percent"];
            /** @description Data Quality Indicators (dqi) in accordance with the Framework.
             *      */
            dqi?: components["schemas"]["DataQualityIndicators"];
            /** @description If present, the Assurance information in accordance with Framework.
             *      */
            assurance?: components["schemas"]["Assurance"];
        };
        PositiveNonZeroDecimal: string;
        PositiveOrZeroDecimal: string;
        Decimal: string;
        NegativeOrZeroDecimal: string;
        ProductOrSectorSpecificRule: {
            /**
             * @description Selection of operator of PCR being used for the PCF calculation. If  operator is not available in the given list, or if you have followed a sector specific guidance, please select "Other" and include details  under "otherOperatorName".
             *
             * @enum {string}
             */
            operator: "PEF" | "EPD International" | "Other";
            /** @description Names of the product or sector specific rules being used for the PCF  calculation.
             *      */
            ruleNames: string[];
            /** @description If operator is Other, then this attribute must be populated with the name  of the operator.
             *      */
            otherOperatorName?: string;
        };
        EmissionFactorDS: {
            /** @description Name of the secondary emission factor databases
             *      */
            name: components["schemas"]["NonEmptyString"];
            /** @description Version of the secondary emission factor databases
             *      */
            version: components["schemas"]["NonEmptyString"];
        };
        /** Format: double */
        Percent: number;
        /**
         * DataQualityIndicators
         * @description Data Type "DataQualityIndicators" of Spec Version 2
         */
        DataQualityIndicators: {
            /** @description Percentage of PCF included in the data quality assessment based on  the >5% emissions threshold.
             *      */
            coveragePercent: components["schemas"]["Percent"];
            /** @description Quantitative data quality rating (DQR) based on the data quality matrix (Framework Table 9), scoring the technological representativeness of the  sources used for PCF calculation based on weighted average of all inputs  representing >5% of PCF emissions.
             *      */
            technologicalDQR: components["schemas"]["FloatBetween1And3"];
            /** @description Quantitative data quality rating (DQR) based on the data quality matrix  (Framework Table 9), scoring the temporal representativeness of the sources  used for PCF calculation based on weighted average of all inputs  representing >5% of PCF emissions.
             *      */
            temporalDQR: components["schemas"]["FloatBetween1And3"];
            /** @description Quantitative data quality rating (DQR) based on the data quality matrix  (Framework Table 9), scoring the geographical representativeness of the  sources used for PCF calculation based on weighted average of all inputs  representing >5% of PCF emissions.
             *      */
            geographicalDQR: components["schemas"]["FloatBetween1And3"];
            /** @description Quantitative data quality rating (DQR) based on the data quality matrix  (Framework Table 9), scoring the completeness of the data collected for  PCF calculation based on weighted average of all inputs representing  >5% of PCF emissions.
             *      */
            completenessDQR: components["schemas"]["FloatBetween1And3"];
            /** @description Quantitative data quality rating (DQR) based on the data quality matrix  (Framework Table 9), scoring the reliability of the data collected for  PCF calculation based on weighted average of all inputs representing  >5% of PCF emissions.
             *      */
            reliabilityDQR: components["schemas"]["FloatBetween1And3"];
        };
        /** Format: float */
        FloatBetween1And3: number;
        /**
         * Assurance
         * @description Data Type "Assurance" of Spec Version 2
         */
        Assurance: {
            /** @description True or False to indicate whether the PCF has been assured in line with the Framework.
             *      */
            assurance: boolean;
            /**
             * @description Level of granularity of the emissions data assured
             *
             * @enum {string}
             */
            coverage?: "corporate level" | "product line" | "PCF system" | "product level";
            /**
             * @description Level of assurance applicable to the PCF
             *
             * @enum {string|null}
             */
            level?: "limited" | "reasonable" | null;
            /**
             * @description Boundary of the assurance
             *
             * @enum {string|null}
             */
            boundary?: "Gate-to-Gate" | "Cradle-to-Gate" | null;
            /** @description Name of the independent third party engaged to undertake assurance
             *      */
            providerName: string;
            /**
             * Format: date-time
             * @description The date at which the assurance was completed
             *
             */
            completedAt?: string | null;
            /** @description Name of the standard against which the PCF was assured
             *      */
            standardName?: string | null;
            /** @description Any additional comments that will clarify the interpretation of the assurance.
             *      */
            comments?: string | null;
        };
        /** @description possible contents of `data` property of events - see tech specs section 6 for details */
        PathfinderEvent: {
            specversion: string;
            id: string;
            source: string;
            /** Format: date-time */
            time: string;
        } & ({
            /** @enum {string} */
            type: "org.wbcsd.pathfinder.ProductFootprint.Published.v1";
            data: components["schemas"]["PFUpdateEventBody"];
        } | {
            /** @enum {string} */
            type: "org.wbcsd.pathfinder.ProductFootprintRequest.Created.v1";
            data: components["schemas"]["PFRequestEventBody"];
        });
        PFUpdateEventBody: {
            pfIds: string[];
        };
        PFRequestEventBody: {
            pf: unknown;
            comment?: string | null;
        };
        /**
         * ErrorResponse
         * @description Response with an error code and descripton. See Chapter "Error Codes" of the Tech Specs for more details.
         */
        ErrorResponse: {
            /** @enum {string} */
            code: "BadRequest" | "NotImplemented" | "AccessDenied" | "NoSuchFootprint" | "TokenExpired" | "InternalError";
            message: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listFootprints: {
        parameters: {
            query?: {
                limit?: number;
                /** @description Syntax as defined by the ODatav4 specification */
                $filter?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /**
                     * @description Link header to next result set. See Tech Specs section 6.6.1
                     * @example https://api.example.com/2/footprints?[...]
                     */
                    link?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: components["schemas"]["ProductFootprint"][];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getFootprintById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: components["schemas"]["ProductFootprint"];
                    };
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    post_event: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PathfinderEvent"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Not implemented */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
